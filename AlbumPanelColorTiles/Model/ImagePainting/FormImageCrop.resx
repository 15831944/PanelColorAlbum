<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonFire.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>